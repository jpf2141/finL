Liquid - one language that can be injected into any stack.

There are an ever-increasing amount of languages that combine fundamental buidling blocks:
        -if/else statements
        -for/while loops
        -switch statements
        -variable/object initialization
        -boolean expressions

Languages differ not only in syntax, but in a variety of intricacies, but the underlying similarities remain.

Liquid is a simple programming language that is Turing-complete in its own right.
However, it is outputs the same block of code in multiple other languages.

One .lqd file can be easily converted to a Java or Python file.
Moreover, the speed of all analogous files is analyzed and ranked.
With simple specification, the code can be morselized into small blocks, and each block will be analyzed.

Thus, it is possible to optimize a large .lqd file, by intelligently splitting it up and testing the various pieces.
The fastest languages for each block are selected, thereby optimizing a large file into smaller files of the right language for the morsel.
Of course, blocks can be specified to be a different language, if optimization is not the primary concern.

An even more important application of this language is the ubiquity of the code base.
By learning liquid, a programmer can effectively produce code for any stack.

Code becomes ubiquitous and able to fill any container that it is poured into.
